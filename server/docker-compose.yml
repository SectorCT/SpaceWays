services:
  db:
    image: postgres:16-alpine
    container_name: my_postgres_db
    environment:
      POSTGRES_DB: myprojectdb
      POSTGRES_USER: myprojectuser
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myprojectuser -d myprojectdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  django:
    container_name: my_django_app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: .
        target: /home/app
        read_only: false
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_NAME: myprojectdb
      DB_USER: myprojectuser
      DB_PASSWORD: yourpassword
      DB_HOST: db
      DB_PORT: 5432
      DJANGO_SETTINGS_MODULE: server.settings
      PYTHONPATH: /home/app
      PYTHONUNBUFFERED: 1

  fastapi:
    container_name: my_fastapi_app
    build:
      context: .
      dockerfile: fastapi-simulation/Dockerfile
    volumes:
      - type: bind
        source: .
        target: /app
        read_only: false
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
      django:
        condition: service_started
    environment:
      DJANGO_SETTINGS_MODULE: server.settings
      DB_NAME: myprojectdb
      DB_USER: myprojectuser
      DB_PASSWORD: yourpassword
      DB_HOST: db
      DB_PORT: 5432
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    working_dir: /app

volumes:
  pgdata:
